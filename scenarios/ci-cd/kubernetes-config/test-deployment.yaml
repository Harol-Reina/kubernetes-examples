apiVersion: apps/v1
kind: Deployment
metadata:
  name: mi-app-test
  labels:
    app: mi-app
    environment: test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mi-app
      environment: test
  template:
    metadata:
      labels:
        app: mi-app
        environment: test
    spec:
      containers:
      - name: app
        image: mi-app:test
        ports:
        - containerPort: 3000
        
        env:
        - name: NODE_ENV
          value: "test"
        - name: DATABASE_URL
          value: "sqlite:///tmp/test.db"
        - name: LOG_LEVEL
          value: "debug"
        
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "250m"
        
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: mi-app-test-service
  labels:
    app: mi-app
    environment: test
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
  selector:
    app: mi-app
    environment: test

---
# Job para ejecutar tests de integraci√≥n
apiVersion: batch/v1
kind: Job
metadata:
  name: integration-tests
  labels:
    app: mi-app
    job-type: integration-test
spec:
  template:
    metadata:
      labels:
        app: mi-app
        job-type: integration-test
    spec:
      containers:
      - name: test-runner
        image: curlimages/curl:latest
        command: ["/bin/sh"]
        args:
        - -c
        - |
          echo "üß™ Ejecutando tests de integraci√≥n..."
          
          # Esperar a que el servicio est√© disponible
          echo "‚è≥ Esperando a que el servicio est√© disponible..."
          until curl -f http://mi-app-test-service/health; do
            echo "Esperando..."
            sleep 5
          done
          
          echo "‚úÖ Servicio disponible, ejecutando tests..."
          
          # Test 1: Health check
          echo "Test 1: Health check"
          if curl -f http://mi-app-test-service/health; then
            echo "‚úÖ Health check passed"
          else
            echo "‚ùå Health check failed"
            exit 1
          fi
          
          # Test 2: API endpoint
          echo "Test 2: API endpoint"
          if curl -f http://mi-app-test-service/api/users; then
            echo "‚úÖ API endpoint passed"
          else
            echo "‚ùå API endpoint failed"
            exit 1
          fi
          
          # Test 3: POST request
          echo "Test 3: POST request"
          if curl -f -X POST -H "Content-Type: application/json" \
             -d '{"test": "data"}' \
             http://mi-app-test-service/api/data; then
            echo "‚úÖ POST request passed"
          else
            echo "‚ùå POST request failed"
            exit 1
          fi
          
          echo "üéâ Todos los tests de integraci√≥n pasaron!"
        
        resources:
          requests:
            memory: "32Mi"
            cpu: "100m"
          limits:
            memory: "64Mi"
            cpu: "200m"
        
      restartPolicy: Never
  backoffLimit: 3
