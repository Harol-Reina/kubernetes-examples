apiVersion: apps/v1
kind: Deployment
metadata:
  name: mi-app-${ENVIRONMENT:-test}
  labels:
    app: mi-app
    environment: ${ENVIRONMENT:-test}
    version: ${BUILD_NUMBER:-latest}
spec:
  replicas: ${REPLICAS:-2}
  selector:
    matchLabels:
      app: mi-app
      environment: ${ENVIRONMENT:-test}
  template:
    metadata:
      labels:
        app: mi-app
        environment: ${ENVIRONMENT:-test}
        version: ${BUILD_NUMBER:-latest}
    spec:
      containers:
      - name: app
        image: mi-app:${BUILD_NUMBER:-latest}
        ports:
        - containerPort: 3000
        
        env:
        - name: NODE_ENV
          value: "${ENVIRONMENT:-test}"
        - name: BUILD_NUMBER
          value: "${BUILD_NUMBER:-latest}"
        - name: GIT_COMMIT
          value: "${GIT_COMMIT:-unknown}"
        - name: BUILD_DATE
          value: "${BUILD_DATE:-unknown}"
        
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: mi-app-${ENVIRONMENT:-test}-service
  labels:
    app: mi-app
    environment: ${ENVIRONMENT:-test}
spec:
  type: ${SERVICE_TYPE:-ClusterIP}
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
  selector:
    app: mi-app
    environment: ${ENVIRONMENT:-test}
