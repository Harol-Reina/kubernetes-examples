# Kubespray Inventory - Desarrollo/Testing
# Configuración simple con 1 master y 2 workers

all:
  hosts:
    # Control Plane Node (Master)
    master1:
      ansible_host: 192.168.1.10
      ip: 192.168.1.10
      access_ip: 192.168.1.10
      ansible_user: ubuntu
      ansible_ssh_private_key_file: ~/.ssh/id_rsa
    
    # Worker Nodes
    worker1:
      ansible_host: 192.168.1.20
      ip: 192.168.1.20
      access_ip: 192.168.1.20
      ansible_user: ubuntu
      ansible_ssh_private_key_file: ~/.ssh/id_rsa
    worker2:
      ansible_host: 192.168.1.21
      ip: 192.168.1.21
      access_ip: 192.168.1.21
      ansible_user: ubuntu
      ansible_ssh_private_key_file: ~/.ssh/id_rsa

  children:
    kube_control_plane:
      hosts:
        master1:
    
    kube_node:
      hosts:
        worker1:
        worker2:
    
    etcd:
      hosts:
        master1:
    
    k8s_cluster:
      children:
        kube_control_plane:
        kube_node:
    
    calico_rr:
      hosts: {}

  vars:
    # Variables para desarrollo
    ansible_python_interpreter: /usr/bin/python3
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
    
    # Configuración básica para desarrollo
    container_manager: containerd
    kube_network_plugin: calico
    
    # Redes más pequeñas para desarrollo
    kube_service_addresses: 10.233.0.0/18
    kube_pods_subnet: 10.233.64.0/18
    
    # Sin alta disponibilidad (single master)
    kube_control_plane_lb: false
    
    # Configuración más permisiva para desarrollo
    kubelet_deployment_type: host
    
    # Configuración de storage para desarrollo
    docker_daemon_graph: "/var/lib/docker"
    
    # Configuración de recursos más baja para VMs pequeñas
    kube_controller_manager_bind_address: 0.0.0.0
    kube_scheduler_bind_address: 0.0.0.0
