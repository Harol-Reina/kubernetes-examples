apiVersion: v1
kind: Pod
metadata:
  name: storage-pod
  labels:
    app: storage-demo
spec:
  containers:
  - name: storage-container
    image: busybox
    command: ["/bin/sh"]
    args: ["-c", "while true; do echo 'Storage pod is running...' >> /data/log.txt; sleep 30; done"]
    volumeMounts:
    - name: storage-volume
      mountPath: /data
    resources:
      requests:
        memory: "64Mi"
        cpu: "250m"
      limits:
        memory: "128Mi"
        cpu: "500m"
  volumes:
  - name: storage-volume
    persistentVolumeClaim:
      claimName: demo-pvc
  restartPolicy: Always

---
# Deployment alternativo para mostrar uso de PVC
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storage-deployment
  labels:
    app: storage-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: storage-app
  template:
    metadata:
      labels:
        app: storage-app
    spec:
      containers:
      - name: storage-app
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: storage-volume
          mountPath: /usr/share/nginx/html
        - name: config-volume
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
      volumes:
      - name: storage-volume
        persistentVolumeClaim:
          claimName: demo-pvc
      - name: config-volume
        configMap:
          name: nginx-storage-config

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-storage-config
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        server {
            listen 80;
            server_name localhost;
            
            location / {
                root /usr/share/nginx/html;
                index index.html index.htm;
                autoindex on;
            }
            
            location /health {
                access_log off;
                return 200 "Storage app is healthy\n";
                add_header Content-Type text/plain;
            }
        }
    }

---
apiVersion: v1
kind: Service
metadata:
  name: storage-service
  labels:
    app: storage-app
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30083
    protocol: TCP
  selector:
    app: storage-app
