apiVersion: v1
kind: ResourceQuota
metadata:
  name: production-quota
  namespace: production
spec:
  hard:
    # Límites de recursos computacionales
    requests.cpu: "20"
    requests.memory: 40Gi
    limits.cpu: "40"
    limits.memory: 80Gi
    
    # Límites de almacenamiento
    requests.storage: 200Gi
    persistentvolumeclaims: "20"
    
    # Límites de objetos
    pods: "50"
    services: "20"
    secrets: "30"
    configmaps: "30"
    replicationcontrollers: "0"
    deployments.apps: "20"
    statefulsets.apps: "10"
    jobs.batch: "20"
    cronjobs.batch: "10"
    
    # Límites de red
    services.nodeports: "5"
    services.loadbalancers: "3"
---
apiVersion: v1
kind: LimitRange
metadata:
  name: production-limits
  namespace: production
spec:
  limits:
  # Límites por defecto para contenedores
  - default:
      cpu: "500m"
      memory: "1Gi"
    defaultRequest:
      cpu: "100m"
      memory: "256Mi"
    type: Container
  
  # Límites para pods
  - max:
      cpu: "4"
      memory: "8Gi"
    min:
      cpu: "50m"
      memory: "64Mi"
    type: Pod
  
  # Límites para PVC
  - max:
      storage: "50Gi"
    min:
      storage: "1Gi"
    type: PersistentVolumeClaim
---
apiVersion: v1
kind: Namespace
metadata:
  name: production
  labels:
    name: production
    tier: production
    security: strict
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: web-app-pdb
  namespace: production
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: web-app
      tier: frontend
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: database-pdb
  namespace: production
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: database
