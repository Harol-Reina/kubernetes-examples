apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: autoscale-demo-hpa
  labels:
    app: autoscale-demo
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: autoscale-demo
  
  minReplicas: 1
  maxReplicas: 10
  
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50  # Escalar cuando el CPU promedio supere 50%
  
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300  # Esperar 5 min antes de escalar hacia abajo
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0    # Escalar inmediatamente hacia arriba
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 60

---
# HPA alternativo basado en memoria
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: autoscale-demo-memory-hpa
  labels:
    app: autoscale-demo-memory
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: autoscale-demo
  
  minReplicas: 2
  maxReplicas: 8
  
  metrics:
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70  # Escalar cuando la memoria supere 70%
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60  # También considerar CPU

---
# HPA con métricas personalizadas (ejemplo avanzado)
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: autoscale-demo-custom-hpa
  labels:
    app: autoscale-demo-custom
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: autoscale-demo
  
  minReplicas: 1
  maxReplicas: 15
  
  metrics:
  # Métrica de CPU
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
  
  # Métrica de memoria
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70
  
  # Métrica externa (ejemplo con requests por segundo)
  # Nota: Requiere un adapter de métricas personalizado
  # - type: External
  #   external:
  #     metric:
  #       name: requests_per_second
  #       selector:
  #         matchLabels:
  #           app: autoscale-demo
  #     target:
  #       type: Value
  #       value: "100"
  
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 25        # Reducir máximo 25% por vez
        periodSeconds: 60
      - type: Pods
        value: 2         # O máximo 2 pods por vez
        periodSeconds: 60
      selectPolicy: Min  # Usar la política más conservadora
    
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
      - type: Percent
        value: 100       # Duplicar pods si es necesario
        periodSeconds: 15
      - type: Pods
        value: 5         # O agregar máximo 5 pods por vez
        periodSeconds: 60
      selectPolicy: Max  # Usar la política más agresiva
